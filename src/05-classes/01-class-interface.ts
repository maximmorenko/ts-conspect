// нюансы интерфейсов

// пример 1
interface ICar {
    do(speed: number): void;
}
interface ICar2 {
    jump(): void;
    // вторая особенность заключается в том что если в классе не испольуется НЕобязательное поле (метод)
    // то и в инстансе его нельзя использовать или перезаписать
    maxSpeed?: number;
}
export class Car implements ICar, ICar2 {
    // особенность заключается в том, что в отличии от объектной типизации, класы,
    // которым назначены интерфейсы могут содержать и другие поля (методы)
    // но также они обязаны содержать все поля - методы интерфейса (т.е минимальный набор)
    do(speed: number): void {
        // входящим параметрам нужно обязательно указывать тип
        // и указав явный тип мы сможем перредать только этот тип при вызове
        console.log('let us go', speed.toFixed()); //получим let us go 12
    }
    jump(): void {
        console.log('let us jump');
    }
    run(): void {
        console.log('let us run');
    }
    
}

// создадим инстанс класса Car
// в то же время класс Car становится типом для инстанса car

const car = new Car; //доступны все методы Car
car.do(12)
// car.maxSpeed = 76 // получим ошибку, так как в классе нет этого свойства 
