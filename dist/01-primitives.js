"use strict";
//numbers
let x = 10;
// как только определен тип, то будут доступны все действия и методы присущие тольок этому типу
//let y = 2341n; // тип bigint большое число (bigint работает только с целыми числами)
let f = NaN; // тип number
// string
// можно явно указать тип
let str;
str = 'hi'; // тип string
//str = 5; // при смене типа будет ошибка
// даже если не указать явно тип то изменить его нелья
//x = 'попытка поменять тип';
// symbol
let symb = Symbol('as');
//let d = str + symb; // получим ошибку так как к символу нельзя применить конкатенацию
// boolean
let o = true;
o = false;
//o = 98; //ошибка
// типы nothing (null, undefined)
// эти типы также как и др нельзя изменить
let u = undefined;
let n = null;
// literal
const num = 1003; // тип будет не number а конкретно значени - 1003
// universal универсальный тип any его можно изменить соответственно, применяются все возможные методы
let ff = 45;
ff = 'str';
ff = true;
// unknown неизвестный
let un = 33; //нельзя применять методы до тех пор пока не будет известен тип
if (un === 'string') {
    un.toUpperCase(); // теперь можно применить методы
}
